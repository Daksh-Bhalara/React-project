{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem-3\\\\Project\\\\MarWell\\\\marwell-project\\\\src\\\\Plastic.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Plastic() {\n  _s();\n  const [product, newproduct] = useState([]);\n  useEffect(() => {\n    let apiUrl = 'http://localhost:4000/plastic';\n    fetch(apiUrl, {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => newproduct(data)).catch(err => console.error(\"Error fetching data: \", err));\n  }, []);\n  const formatePro = product.map(item => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: \"width: 18rem;\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"...\",\n        class: \"card-img-top\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Card title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Plastic, \"gE0VD/aOaXKDa557WkQ2apGXeC0=\");\n_c = Plastic;\nexport default Plastic;\nvar _c;\n$RefreshReg$(_c, \"Plastic\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Plastic","_s","product","newproduct","apiUrl","fetch","method","then","response","json","data","catch","err","console","error","formatePro","map","item","className","style","children","src","class","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["D:/sem-3/Project/MarWell/marwell-project/src/Plastic.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Plastic() {\r\nconst [product,newproduct]=useState([]);\r\n\r\nuseEffect(()=>{\r\n    let apiUrl='http://localhost:4000/plastic'\r\n    fetch(apiUrl,{method:\"GET\"})\r\n    .then(response=>response.json())\r\n    .then(data=>newproduct(data))\r\n    .catch(err=>console.error(\"Error fetching data: \", err));\r\n},[]);\r\n\r\n\r\nconst formatePro = product.map(item=>{\r\n    <div className=\"card\" style=\"width: 18rem;\">\r\n  <img src=\"...\" class=\"card-img-top\" alt=\"...\"/>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Card title</h5>\r\n    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n  </div>\r\n</div>\r\n})\r\n\r\n    return (\r\n <>\r\n            \r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Plastic;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAI;IACV,IAAIW,MAAM,GAAC,+BAA+B;IAC1CC,KAAK,CAACD,MAAM,EAAC;MAACE,MAAM,EAAC;IAAK,CAAC,CAAC,CAC3BC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,IAAI,IAAEP,UAAU,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAC5D,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMG,UAAU,GAAGb,OAAO,CAACc,GAAG,CAACC,IAAI,IAAE;IACjC,aAAApB,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAACC,KAAK,EAAC,eAAe;MAAAC,QAAA,gBAC7CvB,OAAA;QAAKwB,GAAG,EAAC,KAAK;QAACC,KAAK,EAAC,cAAc;QAACC,GAAG,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/C9B,OAAA;QAAKqB,SAAS,EAAC,WAAW;QAAAE,QAAA,gBACxBvB,OAAA;UAAIqB,SAAS,EAAC,YAAY;UAAAE,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1C9B,OAAA;UAAGqB,SAAS,EAAC,WAAW;UAAAE,QAAA,EAAC;QAA8F;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3H9B,OAAA;UAAG+B,IAAI,EAAC,GAAG;UAACN,KAAK,EAAC,iBAAiB;UAAAF,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EACN,CAAC,CAAC;EAEE,oBACH9B,OAAA,CAAAE,SAAA,mBAGS,CAAC;AAIX;AAACE,EAAA,CA/BQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAiChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}